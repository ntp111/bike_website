pipeline {
    agent any

    environment {
        WORKSPACE_DIR = "${env.WORKSPACE}" 
        STAGING_ENV = 'staging' 
        PROD_ENV = 'production'
        EMAIL_RECIPIENT = 'ngtuanphong98@gmail.com'
        DOCKER_IMAGE = "bikewebsite"
        DOCKER_TAG = "1"
        SONAR_TOKEN = credentials('sonar_token')
    }

    stages {
        stage('Build') {

            steps {
                echo 'Creating a temporary Docker container...'

                // Build the Docker image
                bat "docker build --no-cache -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."

                echo 'Cleaning up unused Docker images...'
                bat 'docker image prune -f'

            }
        }

        stage('Test') {
            steps {
                echo 'Running Mocha and Chai tests...'
                bat "npm test"
   
            }
        }

        stage('Code Quality Analysis') {
            steps {
                echo 'Running SonarCloud analysis...'
                 script {
                    bat """
                        sonar-scanner.bat ^
                        -Dsonar.organization=ntp111 ^
                        -Dsonar.projectKey=ntp111_bike_website ^
                        -Dsonar.sources=. ^
                        -Dsonar.host.url=https://sonarcloud.io ^
                        -Dsonar.login=${SONAR_TOKEN}
                    """
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo "Deploying application to ${env.STAGING_ENV} environment..."
                echo 'Deploying using Docker Compose...'
                bat 'docker-compose down'
                bat 'docker-compose up -d'             
                
            }
        }

        stage('Deploy to Production') {
            steps {
                    echo "Deploying application to ${env.PROD_ENV} environment using AWS CodeDeploy..."

            }
        }
    }

    post {
        always {
            emailext(
                attachLog: true,
                to: "${env.EMAIL_RECIPIENT}",
                subject: "Pipeline ${currentBuild.fullDisplayName} completed",
                body: """Pipeline ${currentBuild.fullDisplayName} completed with status ${currentBuild.currentResult}.
                Please check the attached log for more details."""
            )
        }
    }
}
